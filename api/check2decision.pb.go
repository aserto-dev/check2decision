// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: check2decision.proto

package api

import (
	v2 "github.com/aserto-dev/go-authorizer/aserto/authorizer/v2"
	v3 "github.com/aserto-dev/go-directory/aserto/directory/reader/v3"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CheckAssertion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Check    *v3.CheckRequest `protobuf:"bytes,1,opt,name=check,proto3" json:"check,omitempty"`
	Expected bool             `protobuf:"varint,2,opt,name=expected,proto3" json:"expected,omitempty"`
}

func (x *CheckAssertion) Reset() {
	*x = CheckAssertion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_check2decision_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAssertion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAssertion) ProtoMessage() {}

func (x *CheckAssertion) ProtoReflect() protoreflect.Message {
	mi := &file_check2decision_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAssertion.ProtoReflect.Descriptor instead.
func (*CheckAssertion) Descriptor() ([]byte, []int) {
	return file_check2decision_proto_rawDescGZIP(), []int{0}
}

func (x *CheckAssertion) GetCheck() *v3.CheckRequest {
	if x != nil {
		return x.Check
	}
	return nil
}

func (x *CheckAssertion) GetExpected() bool {
	if x != nil {
		return x.Expected
	}
	return false
}

type DecisionAssertion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckDecision *v2.IsRequest `protobuf:"bytes,1,opt,name=check_decision,json=checkDecision,proto3" json:"check_decision,omitempty"`
	Expected      bool          `protobuf:"varint,2,opt,name=expected,proto3" json:"expected,omitempty"`
}

func (x *DecisionAssertion) Reset() {
	*x = DecisionAssertion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_check2decision_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecisionAssertion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecisionAssertion) ProtoMessage() {}

func (x *DecisionAssertion) ProtoReflect() protoreflect.Message {
	mi := &file_check2decision_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecisionAssertion.ProtoReflect.Descriptor instead.
func (*DecisionAssertion) Descriptor() ([]byte, []int) {
	return file_check2decision_proto_rawDescGZIP(), []int{1}
}

func (x *DecisionAssertion) GetCheckDecision() *v2.IsRequest {
	if x != nil {
		return x.CheckDecision
	}
	return nil
}

func (x *DecisionAssertion) GetExpected() bool {
	if x != nil {
		return x.Expected
	}
	return false
}

var File_check2decision_proto protoreflect.FileDescriptor

var file_check2decision_proto_rawDesc = []byte{
	0x0a, 0x14, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x32, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x32, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x70,
	0x69, 0x1a, 0x27, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2f, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x33, 0x2f, 0x72, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x61, 0x73, 0x65, 0x72,
	0x74, 0x6f, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x2f, 0x76, 0x32,
	0x2f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x6c, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x73, 0x73, 0x65, 0x72, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x33, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22,
	0x77, 0x0a, 0x11, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x72,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x64, 0x65,
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61,
	0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72,
	0x2e, 0x76, 0x32, 0x2e, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0d, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2d, 0x64, 0x65,
	0x76, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x32, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x2f, 0x61, 0x70, 0x69, 0x3b, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_check2decision_proto_rawDescOnce sync.Once
	file_check2decision_proto_rawDescData = file_check2decision_proto_rawDesc
)

func file_check2decision_proto_rawDescGZIP() []byte {
	file_check2decision_proto_rawDescOnce.Do(func() {
		file_check2decision_proto_rawDescData = protoimpl.X.CompressGZIP(file_check2decision_proto_rawDescData)
	})
	return file_check2decision_proto_rawDescData
}

var file_check2decision_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_check2decision_proto_goTypes = []any{
	(*CheckAssertion)(nil),    // 0: aserto.check2decision.api.CheckAssertion
	(*DecisionAssertion)(nil), // 1: aserto.check2decision.api.DecisionAssertion
	(*v3.CheckRequest)(nil),   // 2: aserto.directory.reader.v3.CheckRequest
	(*v2.IsRequest)(nil),      // 3: aserto.authorizer.v2.IsRequest
}
var file_check2decision_proto_depIdxs = []int32{
	2, // 0: aserto.check2decision.api.CheckAssertion.check:type_name -> aserto.directory.reader.v3.CheckRequest
	3, // 1: aserto.check2decision.api.DecisionAssertion.check_decision:type_name -> aserto.authorizer.v2.IsRequest
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_check2decision_proto_init() }
func file_check2decision_proto_init() {
	if File_check2decision_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_check2decision_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CheckAssertion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_check2decision_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*DecisionAssertion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_check2decision_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_check2decision_proto_goTypes,
		DependencyIndexes: file_check2decision_proto_depIdxs,
		MessageInfos:      file_check2decision_proto_msgTypes,
	}.Build()
	File_check2decision_proto = out.File
	file_check2decision_proto_rawDesc = nil
	file_check2decision_proto_goTypes = nil
	file_check2decision_proto_depIdxs = nil
}
